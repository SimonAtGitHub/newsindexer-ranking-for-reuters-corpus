package edu.buffalo.cse.irf14.index;

import java.io.Serializable;
import java.util.List;

import edu.buffalo.cse.irf14.SearchRunner.ScoringModel;

public class Posting implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4670855559121370663L;
	
	public Posting(){
		score = 0.0;
	}
	/**
	 * Document Id generated by sequence
	 */
	private Integer docId;
	/**
	 * File Id
	 */
	private transient String fileId;
	/**
	 * no. of occurences
	 */
	private Integer frequency;
	
	/**
	 * The cumulitive relevancy score of the document with repect to
	 * the query terms
	 * 
	 */
	private transient Double score;
	
	/**
	 * The scoring model used to compute the score
	 */
	private transient ScoringModel model;

	/**
	 * List to maintain the positional indexes.
	 * If not to implement positional index , just declare the below var transient
	 */
	private List<Integer> positions;
	/**
	 * @return the docId
	 */
	public Integer getDocId() {
		return docId;
	}

	/**
	 * @param docId
	 *            the docId to set
	 */
	public void setDocId(Integer docId) {
		this.docId = docId;
	}

	/**
	 * @return the fileId
	 */
	public String getFileId() {
		return fileId;
	}

	/**
	 * @param fileId
	 *            the fileId to set
	 */
	public void setFileId(String fileId) {
		this.fileId = fileId;
	}

	/**
	 * @return the frequency
	 */
	public Integer getFrequency() {
		return frequency;
	}

	/**
	 * @param frequency
	 *            the frequency to set
	 */
	public void setFrequency(Integer frequency) {
		this.frequency = frequency;
	}

	/**
	 * @return the score
	 */
	public Double getScore() {
		return score;
	}

	/**
	 * @param score the score to set
	 */
	public void setScore(Double score) {
		this.score = score;
	}


	/**
	 * @return the model
	 */
	public ScoringModel getModel() {
		return model;
	}

	/**
	 * @param model the model to set
	 */
	public void setModel(ScoringModel model) {
		this.model = model;
	}

	public List<Integer> getPositions() {
		return positions;
	}

	public void setPositions(List<Integer> positions) {
		this.positions = positions;
	}

	/**
	 * Overriding equals.To check if a postings list contains a posting of a
	 * particular file id
	 */
	@Override
	public boolean equals(Object object) {
		if (object instanceof Posting) {
			Posting posting = (Posting) object;
			if (object instanceof Posting && this.getDocId() != null
					&& this.getDocId().equals(posting.getDocId())) {
				return true;
			}

		}
		return false;
	}

	@Override
	public String toString() {
		return "Posting [docId=" + docId + ", fileId=" + fileId
				+ ", frequency=" + frequency  
				+ ", score=" + score 
				+ ", model=" + model +"]";
	}

}
